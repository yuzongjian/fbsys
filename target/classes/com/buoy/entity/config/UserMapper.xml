<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.buoy.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.buoy.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="CHAR" />
    <result column="realname" property="realname" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="salt" property="salt" jdbcType="CHAR" />
    <result column="locked" property="locked" jdbcType="BIT" />
    <result column="date" property="date" jdbcType="CHAR" />
 <!--    <result column="deleted" property="deleted" jdbcType="BIT" /> -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, realname, password, salt, locked
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.buoy.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.buoy.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.buoy.entity.User" >
    insert into user (id, username, realname, 
      password, salt, locked)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=CHAR}, #{realname,jdbcType=CHAR}, 
      #{password,jdbcType=CHAR}, #{salt,jdbcType=CHAR}, #{locked,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.buoy.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="locked != null" >
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=CHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=CHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.buoy.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=CHAR},
      </if>
      <if test="record.locked != null" >
        locked = #{record.locked,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=CHAR},
      realname = #{record.realname,jdbcType=CHAR},
      password = #{record.password,jdbcType=CHAR},
      salt = #{record.salt,jdbcType=CHAR},
      locked = #{record.locked,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.buoy.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.buoy.entity.User" >
    update user
    set username = #{username,jdbcType=CHAR},
      realname = #{realname,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      salt = #{salt,jdbcType=CHAR},
      locked = #{locked,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectUserByUsername" resultMap="BaseResultMap">
  	select * from user where username = #{username} and deleted != 1;
  </select>
  
<!--   <resultMap id="UserResultMap" type="com.buoy.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="CHAR" />
    <result column="realname" property="realname" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="salt" property="salt" jdbcType="CHAR" />
    <result column="locked" property="locked" jdbcType="BIT" />
    <result column="date" property="date" jdbcType="CHAR" />
    <collection property="permissions" ofType="com.buoy.entity.Permissions"
    		select="com.buoy.mapper.UserMapper.UserPermissionResultMap">
         <id property="id" column="permission_id"/> 
     	<result property="permission" column="permission"/> 
     </collection>
  </resultMap>
  	
  	
  <resultMap id="UserPermissionResultMap" type="com.buoy.entity.UserPermissionsKey" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <id column="permission_id" property="permissionId" jdbcType="INTEGER" />
  </resultMap>	
  <select id="getPermissionId" resultMap="UserPermissionResultMap">
  	select * from user_permissions WHERE user_id = 1;
  </select>
  	
  <select id="selectUserWithPermission" resultMap="BaseResultMap">
 SELECT 
t1.id,
t1.username,
t1.password,
t1.realname,
t1.salt,
t1.locked,
t2.id,
t2.permission,
t2.description,
t2.available,
t1.date
FROM USER t1
LEFT JOIN user_permissions t3 ON t1.id = t3.user_id
LEFT JOIN permissions t2 ON t2.id = t3.permission_id
WHERE t3.user_id = 1;
  </select> -->
   <resultMap id="PermissionsResultMap" type="com.buoy.entity.Permissions" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="permission" property="permission" jdbcType="CHAR" />
    <result column="description" property="description" jdbcType="CHAR" />
    <result column="available" property="available" jdbcType="BIT" />
  </resultMap>
  <select id="selectUsers" resultMap="BaseResultMap">
  	select * from user where deleted != 1
  	order by date
  		<if test="page != null">
  				limit #{page.offset},#{page.limit}
  			</if>	
  	;
  </select>
  <select id="selectPermissionsByUserId" resultMap="PermissionsResultMap">
  	SELECT
      t1.*
    FROM permissions t1,
      user_permissions t2
    WHERE t1.id = t2.permission_id
        AND t2.user_id = #{userId};
  </select>
  <update id="updateUser" parameterType="com.buoy.entity.User">
  		update user 
  		 	set locked = #{locked,jdbcType=BIT}
  		 	where id = #{id,jdbcType=INTEGER};
  </update>
    <insert id="saveOrUpdateUser" parameterType="com.buoy.entity.User">
		INSERT INTO USER
		            (id,
		             username,
		             realname,
		             PASSWORD,
		             salt,
		             locked,
		             DATE,
		             deleted)
		VALUES (
				#{id,jdbcType=INTEGER}, 
				#{username,jdbcType=CHAR},
				#{realname,jdbcType=CHAR},
				#{password,jdbcType=CHAR},
				#{salt,jdbcType=CHAR},
				#{locked,jdbcType=BIT},
				#{date,jdbcType=CHAR},
				#{deleted,jdbcType=BIT}
				)
		ON DUPLICATE KEY UPDATE 
				<!-- username = #{username,jdbcType=CHAR},
				realname = #{realname,jdbcType=CHAR}, -->
				locked = #{locked,jdbcType=BIT},
				deleted = #{deleted,jdbcType=BIT};
  </insert>
  <select id="selectCount" resultType="int">
  	select count(id) from user where deleted != 1;
  </select>
</mapper>